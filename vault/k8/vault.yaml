apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: $NS

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-server-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault
    namespace: $NS

---

apiVersion: v1
kind: Service
metadata:
  name: vault-svc
  namespace: $NS
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    component: server
spec:
  type: NodePort
  ports:
    - port: 8200
      protocol: TCP
      targetPort: 8200
      nodePort: $VAULT_NODE_PORT
  selector:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    component: server

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: $NS
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  serviceName: vault-internal
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vault
      app.kubernetes.io/instance: vault
      component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault
        app.kubernetes.io/instance: vault
        component: server
    spec:
      serviceAccountName: vault
      securityContext:
        runAsNonRoot: true
        runAsGroup: 1000
        runAsUser: 100
        fsGroup: 1000
      volumes:
        - name: config
          configMap:
            name: vault-config
        - name: home
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: vault-datashare-vol
          persistentVolumeClaim:
            claimName: vault-pvc
      containers:
        - name: vault-container
          image: hashicorp/vault:1.8.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command: [ "/bin/sh", "-c", "nohup /vault/data-share/scripts/bootstrap-vault.sh > /tmp/log.out &" ]
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - |
              /usr/local/bin/docker-entrypoint.sh vault server -config=/vault/config/extraconfig-from-values.hcl
          securityContext:
            allowPrivilegeEscalation: false
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_ADDR
              value: "http://127.0.0.1:8200"
            - name: VAULT_API_ADDR
              value: "http://$(POD_IP):8200"
            - name: SKIP_CHOWN
              value: "true"
            - name: SKIP_SETCAP
              value: "true"
            - name: VAULT_CLUSTER_ADDR
              value: "https://$(HOSTNAME).vault-internal:8201"
            - name: HOME
              value: "/home/vault"
          volumeMounts:
            - name: data
              mountPath: /vault/data
            - name: config
              mountPath: /vault/config
            - name: home
              mountPath: /home/vault
            - name: vault-datashare-vol
              mountPath: /vault/data-share
          ports:
            - containerPort: 8200
              name: http
            - containerPort: 8201
              name: https-internal
            - containerPort: 8202
              name: http-rep
          readinessProbe:
            exec:
              command: ["/bin/sh", "-ec", "vault status -tls-skip-verify"]
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3